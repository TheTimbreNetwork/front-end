"use client";

import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useState, useEffect, createContext } from "react";

import { AppContextType } from "./types/types";
import "@rainbow-me/rainbowkit/styles.css";
import {
  getDefaultWallets,
  RainbowKitProvider,
  darkTheme
} from "@rainbow-me/rainbowkit";
import { configureChains, createConfig, WagmiConfig, useNetwork } from "wagmi";
import {
  mainnet,
  polygon,
  optimism,
  arbitrum,
  polygonZkEvm,
  gnosis
} from "wagmi/chains";
import { alchemyProvider } from "wagmi/providers/alchemy";
import { publicProvider } from "wagmi/providers/public";

import Navigation from "./components/navigation";
import { Footer } from "./components/Footer";
import { BannerContainer } from "./components/BannerContainer";

import { AllProvider } from "../context/AllContext";

// removed alchemyProvider({ apiKey: process.env.ALCHEMY_ID }), from before publicProvider()
//  due to extra setup needed for alchemy
// removed other chains to avoid confusion: polygonZkEvm, gnosis, mainnet, optimism, arbitrum
const { chains, publicClient } = configureChains([polygon], [publicProvider()]);

const { connectors } = getDefaultWallets({
  appName: "Timbre Network",
  projectId: process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID || "",
  chains
});

const wagmiConfig = createConfig({
  autoConnect: true,
  connectors,
  publicClient
});

const inter = Inter({ subsets: ["latin"] });

// Commented out because of "use client".
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <AllProvider>
          <WagmiConfig config={wagmiConfig}>
            <RainbowKitProvider
              chains={chains}
              theme={darkTheme({
                accentColor: "#111827"
              })}
            >
              <BannerContainer />
              <Navigation />
              {children}
              <Footer />
            </RainbowKitProvider>
          </WagmiConfig>
        </AllProvider>
      </body>
    </html>
  );
}
